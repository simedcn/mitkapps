
#ifndef PopeElements_h
#define PopeElements_h

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <PopeLibExports.h>

#include <mitkDataNode.h>
#include <QString>
#include <QStringList>

#include <string>
#include <vector>
#include <initializer_list>
#include <memory>

using namespace std;

#define SHOW_WARNINGS false

class PopeLib_EXPORT Elements final
{
private:
	Elements();

public:
	static void delete_spaces(string& str);
	static void to_upper(string& str);
	static void to_lower(string& str);
	static string trim_string(const string& str, const string& whitespace = " \t");
	static wstring trim_string(const wstring& str, const wstring& whitespace = L" \t");

	static string get_property(const char* prop_a, const char* prop_b, const mitk::BaseData* data, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_property(const char* prop_a, const char* prop_b, const mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientId(mitk::BaseData* baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientId(mitk::BaseData::Pointer baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientId(mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientId_or_patientName(mitk::BaseData* baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientId_or_patientName(mitk::BaseData::Pointer baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientId_or_patientName(mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static QString get_patientId_or_patientName(const string& filename, bool show_warning = SHOW_WARNINGS, const QString& def_value = "");
	static QString get_patientId_or_patientName(const QString& filename, bool show_warning = SHOW_WARNINGS, const QString& def_value = "");
	static QString get_seriesInstanceUID(const string& filename, const QString& def_value = "");
	static string get_patientName(mitk::BaseData* baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientName(mitk::BaseData::Pointer baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientName(mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string find_patientName(const list<mitk::BaseData::Pointer>& baseDataList, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientBirthdate(mitk::BaseData* baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientBirthdate(mitk::BaseData::Pointer baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientBirthdate(mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientGender(mitk::BaseData* baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientGender(mitk::BaseData::Pointer baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_patientGender(mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_imageName(mitk::BaseData* baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_imageName(mitk::BaseData::Pointer baseData, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static string get_imageName(mitk::DataNode* dataNode, bool show_warning = SHOW_WARNINGS, const string& def_value = "");
	static vector<QString> get_imageNames(const list<mitk::BaseData::Pointer>& baseDataList, bool show_warning = SHOW_WARNINGS, const string& def_value = "");

	static string recognize_name(const string& name);
	static string recognize_gender(const string& gender);
	static string recognize_birthday(const string& birthday);
	static string get_short_name(string name);

	static bool recognize_property(QString* property, int* count);
	static bool split_properties(const string& str_prop, QStringList* properties, vector<int>* nums = nullptr);

	static size_t get_hash(mitk::BaseData* baseData);
};

#endif
